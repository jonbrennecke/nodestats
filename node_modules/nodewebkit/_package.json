{
  "name": "nodewebkit",
  "version": "0.8.5-3",
  "description": "A installer for node-webkit",
  "repository": {
    "type": "git",
    "url": "git://github.com/shama/nodewebkit.git"
  },
  "bin": {
    "nodewebkit": "bin/nodewebkit"
  },
  "scripts": {
    "postinstall": "node scripts/install.js"
  },
  "files": [
    "lib",
    "bin/nodewebkit",
    "scripts/install.js"
  ],
  "author": {
    "name": "Kyle Robinson Young"
  },
  "license": "MIT",
  "engines": {
    "node": ">= 0.10.0"
  },
  "dependencies": {
    "rimraf": "^2.2.2",
    "optimist": "^0.6.0",
    "download": "^0.1.10",
    "multimeter": "^0.1.1"
  },
  "keywords": [
    "node-webkit",
    "webkit",
    "installer",
    "desktop",
    "application"
  ],
  "devDependencies": {
    "semver": "~2.2.1",
    "request": "~2.30.0"
  },
  "readme": "# nodewebkit\n\nAn installer for [node-webkit](https://github.com/rogerwang/node-webkit).\n\n> node-webkit is an app runtime based on Chromium and node.js. For building desktop applications that will run on OSX, Windows and Linux.\n\n## usage\nInstall locally to your project with: `npm install nodewebkit` and then in your `package.json` add a script:\n\n```json\n{\n  \"scripts\": {\n    \"start\": \"nodewebkit\"\n  }\n}\n```\n\nNow it will run your local project when you type `npm start`.\n\nIf your project is in another folder, add the path to the project `\"start\": \"nodewebkit path/to/app\"`.\n\nYou could also call the binary directly with `node_modules/.bin/nodewebkit` instead of adding to your `package.json`.\n\n### global\nYou can also install globally with `npm install nodewebkit -g` and then in any project type `nodewebkit` to run the project. Installing locally is recommended though as each project can have it's own dependent version of node-webkit.\n\n## example\nIf you want a really quick example try this:\n\n1. `git clone https://github.com/zcbenz/nw-sample-apps && cd nw-sample-apps`\n2. `npm install nodewebkit`\n3. `node_modules/.bin/nodewebkit file-explorer`\n\nand now you should see a file explorer demo app.\n\n## command line options\nThere are a few (platform-specific) arguments you can pass to the `nodewebkit` executable to\ncustomize your node-webkit application:\n\n* `--mac_plist <path-to-plist-file>`: (OS X only) Copies the given file to Info.plist in the app\n  bundle. This lets you do things like change your app's name and point to a different icon.\n\n* `--mac_icon <path-to-icns-file>`: (OS X only) Copies the given .icns file to the Resources/ dir\n  in the app bundle. You will need to point to the file with a custom plist file as well (see\n  `--mac_list`)\n\n**NOTE**: These options will keep the copied files in the app bundle for as long as the bundle is\non the filesystem (they're not deleted between app invocations). As a result, they're not\nrecommended if you installed nodewebkit globally using `-g`.  Also note that\n[OS X caches these files](http://proteo.me.uk/2011/08/mac-application-bundle-caching/),\nso you may need to manually clear these cached files during development.\n\n## license\n[node-webkit](https://github.com/rogerwang/node-webkit)'s code and this installer use the MIT license.\n",
  "readmeFilename": "README.md",
  "bugs": {
    "url": "https://github.com/shama/nodewebkit/issues"
  },
  "homepage": "https://github.com/shama/nodewebkit",
  "_id": "nodewebkit@0.8.5-3",
  "dist": {
    "shasum": "b8866b170f6998854a6c20962862e18574257198"
  },
  "_from": "nodewebkit@",
  "_resolved": "https://registry.npmjs.org/nodewebkit/-/nodewebkit-0.8.5-3.tgz"
}
